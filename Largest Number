class Solution:
    def largestNumber(self, nums: List[int]) -> str:
        def merge_sort(nums: List[int]) -> List[int]:
            if len(nums) <= 1:
                return nums
            
            mid = len(nums) // 2
            left = merge_sort(nums[:mid])
            right = merge_sort(nums[mid:])
            
            return merge(left, right)
        
        def merge(left: List[int], right: List[int]) -> List[int]:
            merged = []
            i, j = 0, 0
            
            while i < len(left) and j < len(right):
                if int(str(left[i]) + str(right[j])) >= int(str(right[j]) + str(left[i])):
                    merged.append(left[i])
                    i += 1
                else:
                    merged.append(right[j])
                    j += 1
            
            merged.extend(left[i:])
            merged.extend(right[j:])
            
            return merged
        
        sorted_nums = merge_sort(nums)
        largest_num = ''.join(map(str, sorted_nums)).lstrip('0') or '0'
        
        return largest_num
