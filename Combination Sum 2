class Solution:
    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:
        ans = []

        def backtrack(start_index, remaining, current_combination):
            if remaining < 0:
                return
            if remaining == 0:
                ans.append(list(current_combination))
                return

            for i in range(start_index, len(candidates)):
                if i > start_index and candidates[i] == candidates[i - 1]:
                    continue
                num = candidates[i]
                current_combination.append(num)
                backtrack(i + 1, remaining - num, current_combination)
                current_combination.pop()

        candidates.sort()
        backtrack(0, target, [])
        return ans
