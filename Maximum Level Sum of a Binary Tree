from collections import deque

class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

class Solution:
    def maxLevelSum(self, root: TreeNode) -> int:
        if root is None:
            return 0

        max_sum = float('-inf')
        max_level = 1
        
        queue = deque([(root, 1)])  # Store nodes along with their levels
        
        while queue:
            level_sum = 0
            level_size = len(queue)
            
            for _ in range(level_size):
                node, level = queue.popleft()
                level_sum += node.val
                
                if node.left:
                    queue.append((node.left, level + 1))
                
                if node.right:
                    queue.append((node.right, level + 1))
            
            if level_sum > max_sum:
                max_sum = level_sum
                max_level = level
        
        return max_level
